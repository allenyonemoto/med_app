{"ast":null,"code":"var _jsxFileName = \"/home/project/med_app/src/Components/Reviews/Reviews.js\",\n  _s = $RefreshSig$();\n// Reviews.js\nimport React, { useState, useEffect } from 'react';\nimport Popup from 'reactjs-popup';\nimport GiveReviews from './GiveReviews/ReviewForm';\nimport './Reviews.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Reviews = () => {\n  _s();\n  // Sample data array\n  const data = [{\n    name: 'John',\n    age: 30\n  }, {\n    name: 'Jane',\n    age: 25\n  }, {\n    name: 'Doe',\n    age: 40\n  }];\n  const [doctors, setDoctors] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [selectedDoctor, setSelectedDoctor] = useState(null);\n  const [reviews, setReviews] = useState([]);\n  useEffect(() => {\n    const getDoctorsDetails = () => {\n      fetch('https://api.npoint.io/9a5543d36f1460da2f63').then(res => res.json()).then(data => {\n        const dataWithId = data.map((item, index) => ({\n          ...item,\n          id: index + 1\n        }));\n        setDoctors(dataWithId);\n      }).catch(err => console.log(err));\n    };\n\n    // Call the function to fetch doctors' details\n    getDoctorsDetails();\n  }, []);\n  console.log(\"doctors: \", doctors);\n\n  // Check if appointment data exists in localStorage\n  useEffect(() => {\n    const storedReviews = {};\n    doctors.forEach(doctor => {\n      const storedReview = JSON.parse(localStorage.getItem(`ratingsData_${doctor.id}`));\n      console.log(\"useEffect\");\n      if (storedReview) {\n        storedReviews[doctor.id] = storedReview;\n      }\n    });\n    setReviews(storedReviews);\n  }, [doctors]); // Empty dependency array to run the effect only once on component mount\n  console.log(\"stored reviews: \", reviews);\n  const handleFormSubmit = formData => {\n    localStorage.setItem(`ratingsData_${selectedDoctor.id}`, JSON.stringify(formData));\n    setShowModal(false);\n    window.location.reload();\n  };\n  const handleFeedbackClick = doctor => {\n    setSelectedDoctor(doctor);\n    setShowModal(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reviews-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"report-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Serial Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Doctor Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Doctor Speciality\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Provide Feedback\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Review Given\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: doctors.map((doctor, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: doctor.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: doctor.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: doctor.speciality\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), !reviews[doctor.id] ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleFeedbackClick(doctor),\n                children: \"Click Here\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"disabled-button\",\n                disabled: true,\n                children: \"Click Here\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: reviews[doctor.id].review\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      trigger: null,\n      modal: true,\n      open: showModal,\n      onClose: () => setShowModal(false),\n      children: close => /*#__PURE__*/_jsxDEV(GiveReviews, {\n        doctor: selectedDoctor,\n        onSubmit: handleFormSubmit,\n        closeModal: close\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(Reviews, \"sUV6tZVeXsY9r0uG5TjYzOVplGQ=\");\n_c = Reviews;\nexport default Reviews;\nvar _c;\n$RefreshReg$(_c, \"Reviews\");","map":{"version":3,"names":["React","useState","useEffect","Popup","GiveReviews","jsxDEV","_jsxDEV","Fragment","_Fragment","Reviews","_s","data","name","age","doctors","setDoctors","showModal","setShowModal","selectedDoctor","setSelectedDoctor","reviews","setReviews","getDoctorsDetails","fetch","then","res","json","dataWithId","map","item","index","id","catch","err","console","log","storedReviews","forEach","doctor","storedReview","JSON","parse","localStorage","getItem","handleFormSubmit","formData","setItem","stringify","window","location","reload","handleFeedbackClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","speciality","onClick","disabled","review","trigger","modal","open","onClose","close","onSubmit","closeModal","_c","$RefreshReg$"],"sources":["/home/project/med_app/src/Components/Reviews/Reviews.js"],"sourcesContent":["// Reviews.js\nimport React, { useState, useEffect } from 'react';\nimport Popup from 'reactjs-popup';\nimport GiveReviews from './GiveReviews/ReviewForm';\nimport './Reviews.css';\n\nconst Reviews = () => {\n  // Sample data array\n  const data = [\n    { name: 'John', age: 30 },\n    { name: 'Jane', age: 25 },\n    { name: 'Doe', age: 40 }\n  ];\n\n  const [doctors, setDoctors] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [selectedDoctor, setSelectedDoctor] = useState(null);\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const getDoctorsDetails = () => {\n      fetch('https://api.npoint.io/9a5543d36f1460da2f63')\n        .then(res => res.json())\n        .then(data => {\n          const dataWithId = data.map((item, index) => ({ ...item, id: index + 1 }));\n          setDoctors(dataWithId);\n        })\n        .catch(err => console.log(err));\n    };\n  \n    // Call the function to fetch doctors' details\n    getDoctorsDetails();\n  }, []); \n  console.log(\"doctors: \", doctors);\n  \n  // Check if appointment data exists in localStorage\n  useEffect(() => {\n    const storedReviews = {};\n    doctors.forEach(doctor => {\n      const storedReview = JSON.parse(localStorage.getItem(`ratingsData_${doctor.id}`));\n      console.log(\"useEffect\");\n      if (storedReview) {\n        storedReviews[doctor.id] = storedReview;\n      }\n    });\n    setReviews(storedReviews);\n  },[doctors]); // Empty dependency array to run the effect only once on component mount\n    console.log(\"stored reviews: \", reviews);\n\n\n  const handleFormSubmit = (formData) => {\n    localStorage.setItem(`ratingsData_${selectedDoctor.id}`, JSON.stringify(formData));\n    setShowModal(false);\n    window.location.reload();\n  };\n\n  const handleFeedbackClick = (doctor) => {\n    setSelectedDoctor(doctor);\n    setShowModal(true);\n  };\n\n  return (\n    <div className=\"reviews-container\">\n      <table className=\"report-table\">\n        <thead>\n          <tr>\n            <th>Serial Number</th>\n            <th>Doctor Name</th>\n            <th>Doctor Speciality</th>\n            <th>Provide Feedback</th>\n            <th>Review Given</th>\n          </tr>\n        </thead>\n        <tbody>\n          {doctors.map((doctor, index) => (\n            <tr key={index}>\n              <td>{doctor.id}</td>\n              <td>{doctor.name}</td>\n              <td>{doctor.speciality}</td>\n              {!reviews[doctor.id] ? (\n                <>\n                  <td>\n                    <button onClick={() => handleFeedbackClick(doctor)}>Click Here</button>\n                  </td>\n                  <td></td>\n                </>\n              ) : (\n                <>\n                  <td>\n                    <button className=\"disabled-button\" disabled>Click Here</button>\n                  </td>\n                  <td>{reviews[doctor.id].review}</td>\n                </>\n              )}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <Popup\n        trigger={null}\n        modal\n        open={showModal}\n        onClose={() => setShowModal(false)}\n      >\n        {(close) => <GiveReviews doctor={selectedDoctor} onSubmit={handleFormSubmit} closeModal={close} />}\n      </Popup>\n    </div>\n  );\n};\n\nexport default Reviews;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}